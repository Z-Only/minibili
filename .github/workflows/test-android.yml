name: test android

# TODO: remove auto trigger, waiting for avaliable action for android, now can only build.
on:
    workflow_dispatch:

concurrency:
    group: ${{ github.workflow }}-${{ github.ref }}
    cancel-in-progress: true

jobs:
    test:
        runs-on: ${{ matrix.platform }}

        strategy:
            fail-fast: false
            matrix:
                platform: [ubuntu-latest, macos-latest, windows-latest]

        steps:
            - uses: actions/checkout@v4

            - name: install Rust stable
              uses: dtolnay/rust-toolchain@stable

            - name: install Linux dependencies
              if: matrix.platform == 'ubuntu-latest'
              run: |
                  sudo apt-get update
                  sudo apt-get install -y libgtk-3-dev webkit2gtk-4.1

            - name: enable corepack for package management
              run: corepack enable

            - name: setup node
              uses: actions/setup-node@v4
              with:
                  node-version: lts/*
                  cache: 'pnpm'

            - uses: actions/setup-java@v3
              with:
                  distribution: temurin
                  java-version: 17
                  cache: 'gradle'

            - name: Setup NDK
              uses: nttld/setup-ndk@v1
              id: setup-ndk
              with:
                  ndk-version: r25b
                  local-cache: true

            - name: Restore Android Symlinks
              if: matrix.platform == 'ubuntu-latest' || matrix.platform == 'macos-latest'
              run: |
                  directory="${{ steps.setup-ndk.outputs.ndk-path }}/toolchains/llvm/prebuilt/linux-x86_64/bin"
                  find "$directory" -type l | while read link; do
                      current_target=$(readlink "$link")
                      new_target="$directory/$(basename "$current_target")"
                      ln -sf "$new_target" "$link"
                      echo "Changed $(basename "$link") from $current_target to $new_target"
                  done

            - uses: Swatinem/rust-cache@v2

            - name: install frontend dependencies
              run: pnpm i --frozen-lockfile

            - name: init Android Studio project
              run: pnpm tauri android init
              env:
                  NDK_HOME: ${{ steps.setup-ndk.outputs.ndk-path }}

            - name: build APK universal
              run: pnpm tauri android build
              env:
                  NDK_HOME: ${{ steps.setup-ndk.outputs.ndk-path }}
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            - name: build APK split per architecture
              run: pnpm tauri android build --split-per-abi
              env:
                  NDK_HOME: ${{ steps.setup-ndk.outputs.ndk-path }}
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
